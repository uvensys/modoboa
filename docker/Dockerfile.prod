FROM debian:stable-slim as builder
LABEL maintainer="s.schwebel@uvensys.de"

ENV LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    S6_VERSION=v2.2.0.3 \
    USER=modoboa

RUN apt update && apt install locales -y && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&  locale-gen
RUN adduser ${USER} --system --group

# We copy just the requirements.txt first to leverage Docker cache
COPY ./requirements.txt /build/requirements.txt

# Get dependencies
RUN apt install -y nginx python3 python3-pip python3-rrdtool git python3-mysqldb gunicorn
RUN python3 -m pip install --upgrade pip && python3 -m pip install -r /build/requirements.txt 

# Add s6 overlay, so we can manage multiple processes
ADD https://github.com/just-containers/s6-overlay/releases/download/$S6_VERSION/s6-overlay-amd64-installer /tmp/
RUN chmod +x /tmp/s6-overlay-amd64-installer && /tmp/s6-overlay-amd64-installer /


RUN mkdir /code
#WORKDIR /code
COPY . /code
COPY ./bin/ /usr/local/bin
COPY docker/entrypoint.sh /usr/bin/entrypoint.sh

RUN cd code && python3 -m pip install .

# Create service script for gunicorn
RUN mkdir /run/gunicorn && chown $USER /run/gunicorn
RUN mkdir /etc/services.d/gunicorn && \
    echo '#!/usr/bin/execlineb -P\nwith-contenv\n' > /etc/services.d/gunicorn/run && \
    echo "s6-setuidgid $USER" >> /etc/services.d/gunicorn/run && \
    echo '\n/usr/bin/entrypoint.sh gunicorn' >> /etc/services.d/gunicorn/run && \
    chmod +x /etc/services.d/gunicorn/run

# Create service script for nginx
RUN rm /var/log/nginx/access.log && rm /var/log/nginx/error.log && ln -s /dev/stderr /var/log/nginx/error.log && ln -s /dev/stdout /var/log/nginx/access.log
COPY docker/modoboa.conf /etc/nginx/sites-enabled/default
RUN mkdir /etc/services.d/nginx && \
    echo '#!/usr/bin/execlineb -P\nwith-contenv\n' > /etc/services.d/nginx/run && \
    echo '\n/usr/sbin/nginx "-g daemon off;"' >> /etc/services.d/nginx/run && \
    chmod +x /etc/services.d/nginx/run



RUN mkdir /app && chown $USER /app

EXPOSE 80/tcp
ENTRYPOINT ["/init"]
